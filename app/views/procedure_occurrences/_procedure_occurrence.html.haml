%h3
  Procedure:
  = @datapoint.name
#procedure_occurrence
  = form_for [@registry, @interleave_person, @procedure_occurrence], html: { class: 'procedure_occurrence_form' }, remote: true, validate: true do |f|
    = link_to '', concepts_interleave_datapoint_url(@datapoint.id, column: 'procedure_concept_id'), class: 'hide', id: 'concepts_interleave_datapoint_url'
    = f.hidden_field :interleave_datapoint_id, value: @datapoint.id
    .row
      .procedure_date
        %label{for: 'procedure_date' }
          Date
          %span{ class: 'required' }
            *
          = f.text_field :procedure_date, class: 'datepicker'
      .quantity
        %label{for: 'quantity' }
          Quantity
          %span{ class: 'required' }
            *
          = f.text_field :quantity
    .row
      .procedure_concept_id
        %label{for: 'procedure_concept_id' }
          Concept
          %span{ class: 'required' }
            *
          = f.select :procedure_concept_id, options_for_select(@concepts, selected: f.object.procedure_concept_id), { include_blank: true }
      .procedure_type_concept_id
        %label{for: 'procedure_type_concept_id' }
          Type
          %span{ class: 'required' }
            *
          = f.select :procedure_type_concept_id, options_for_select(@type_concepts, selected: f.object.procedure_type_concept_id), { include_blank: true }
    .interleave_sub_datapoints
      - @sub_datapoints.in_groups_of(2).each do |sub_datapoints_group|
        .row
          - sub_datapoints_group.each_with_index do |sub_datapoint, i|
            - if i.even?
              .left
                - if sub_datapoint.class.to_s == 'Measurement'
                  = render 'measurement/measurement_sub_datapoint', measurement: sub_datapoint
            - else
              .right
                - if sub_datapoint.class.to_s == 'Measurement'
                  = render 'measurement/measurement_sub_datapoint', measurement: sub_datapoint
      .navigation
        %p.help-text
          %span{ class: 'required' }
            *
          Indicates required field
        = f.submit 'Save', class: 'button'
        = link_to 'Cancel', '#', class: 'cancel-link button warning'